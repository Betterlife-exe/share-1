using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class courseData


//started to rebuild as class
{
  courseData(string[] question, string[] answer, int distanceSetting, int heightSetting)
  {
    Public string question = question;
    Public string answer = answer;

    for (int iter3 = 0; iter3 < 19; iter3++)
    {
      for (int iter2 = 0; iter2 < 18; iter2++)
      {
        for (int iter1 = 0; iter1 < 18; iter1++)
        {

        }
      }
    }


//inside out iterate
    for (int iter1 = 0; iter1 < courseNumbers.Length; iter1++)
    {
      for (int iter2 = 0; iter2 < courseNumbers[iter1].Length; iter2++)
      {
        Random rnd = new Random();
        int randomRandom = rnd.Next(0,2);

        for(int iter3 = 0; iter3 < 19; iter3++)
        {
          if (randomRandom == 0)
          {
            int wrongAssign1 = randIndex[0][iter3];
            int wrongAssign2 = randIndex[1][iter3];
          }else{
            int wrongAssign1 = randIndex[2][iter3];
            int wrongAssign2 = randIndex[3][iter3];
          };
          courseNumbers[iter1][iter2][iter3][2] == courseNumbers[iter1][iter2][wrongAssign1][1];
          courseNumbers[iter1][iter2][iter3][3] == courseNumbers[iter1][iter2][wrongAssign2][1];
        }
      };

    }


  }


]

  new platform


//original array

  string[][][][] courseStrings = new string[][][][]
  {
      new string[][][]
      {
        new string[][]
        {
          new string[] {"disabled", "disabled"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"}
        },
        new string[][]
        
        // cut out most of the array here
        
          },
        new string[][]
        {
          new string[] {"disabled", "disabled"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"},
          new string[] {"question", "answer"}
        }
      }
  };

//dynamic generation of data for use with array method

  int[][][] orderTemplate = new int[][][]
  {
    new (int)[][]
    {
      new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19},
      new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19},
      new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19},
      new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19},
      new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19}
    },
    new int[][]
    {
      new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19},
      new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19},
      new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19},
      new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19},
      new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19}
    },
    new int[][]
    {
      new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19},
      new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19},
      new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19},
      new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19},
      new int[]{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19}
    }
};


  int[][][] nextOrderTemplate = new int[][][]
  {
    new (int)[][]
    {
      new int[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0},
      new int[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0},
      new int[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0},
      new int[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0},
      new int[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0}
    },
    new int[][]
    {
      new int[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0},
      new int[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0},
      new int[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0},
      new int[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0},
      new int[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0}
    },
    new int[][]
    {
      new int[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0},
      new int[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0},
      new int[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0},
      new int[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0},
      new int[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0}
    }
  };

  int[][][] heightTemplate = new int[][][]
  {
    new int[][]
    {
      new int[]{ 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4},
      new int[]{ 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4},
      new int[]{ 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4},
      new int[]{ 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4}
    },
    new int[][]
    {
      new int[]{ 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4},
      new int[]{ 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4},
      new int[]{ 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4},
      new int[]{ 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4}
    }
};

int[][] randIndex = new int[][]
{
  new int[]{ 0, 5, 16, 8, 6, 18, 2, 15, 10, 4, 1, 9, 17, 7, 3, 11, 14, 12, 13},
  new int[]{ 0, 17, 8, 9, 12, 2, 11, 10, 18, 14, 7, 3, 16, 1, 5, 4, 13, 15, 6},
  new int[]{ 0, 2, 11, 18, 8, 9, 3, 1, 15, 17, 6, 12, 4, 14, 16, 5, 10, 13, 7},
  new int[]{ 0, 4, 18, 7, 3, 1, 15, 17, 12, 8, 16, 2, 14, 9, 13, 6, 5, 11, 10}
};


function build ()
  {

  for (int iter1 = 0; iter1 < courseNumbers.Length; iter1++)
  {
    for (int iter2 = 0; iter2 < courseNumbers[iter1].Length; iter2++)
    {
      Random rnd = new Random();
      int randomRandom = rnd.Next(0,2);

      for(int iter3 = 0; iter3 < 19; iter3++)
      {
        if (randomRandom == 0)
        {
          int wrongAssign1 = randIndex[0][iter3];
          int wrongAssign2 = randIndex[1][iter3];
        }else{
          int wrongAssign1 = randIndex[2][iter3];
          int wrongAssign2 = randIndex[3][iter3];
        };
        courseNumbers[iter1][iter2][iter3][2] == courseNumbers[iter1][iter2][wrongAssign1][1];
        courseNumbers[iter1][iter2][iter3][3] == courseNumbers[iter1][iter2][wrongAssign2][1];
      }
    };

  }



  int heightSetting = 0;
  int distanceSetting = 0;

  int[][][][] courseNumbers = new int[][][][]

    for (int iter1 = 0; iter1 < courseStrings.Length; iter1++)
    {
      for (int iter2 = 0; iter2 < courseStrings[iter1].Length; iter2++)
      {
        for (int iter3 = 0; iter3 < courseStrings[iter1][iter2].Length; iter3++)
        {
          for (int iter4 = 0; iter4 < 19; iter4++)
          {
            int[iter1][iter2][iter3][0] courseNumbers = iter3;
            int[iter1][iter2][iter3][1] courseNumbers = iter2;
            int[iter1][iter2][iter3][2] courseNumbers = iter1;
            int[iter1][iter2][iter3][3] courseNumbers = heightTemplate[heightSetting][iter3];
            int[iter1][iter2][iter3][4] courseNumbers = orderTemplate[distanceSetting][iter3];
            int[iter1][iter2][iter3][5] courseNumbers = nextOrderTemplate[distanceSetting][iter3];// does not need to be stored
            Random rnd = new Random();
            int[iter1][iter2][iter3][6] courseNumbers = rnd.Next(0,3);
          }
        }
      }
    };


      for (int iter1 = 0; iter1 < courseNumbers.Length; iter1++)
      {
        for (int iter2 = 0; iter2 < courseNumbers[iter1].Length; iter2++)
        {
          for (int iter3 = 0; iter3 < courseNumbers[iter1][iter2].Length; iter3++)
          {
            for (int iter4 = 0; iter4 < 19; iter4++)
            {
              nextSet = nextOrderTemplate[distanceSetting][iter3][iter4];
              int[iter1][iter2][iter3][5] courseNumbers = courseNumbers[iter1][iter2][iter3][nextSet];//overwrites nextOrder's integration
            }
          }
        }
      }
  };
 build();
};
